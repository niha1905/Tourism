# -*- coding: utf-8 -*-
"""tourism_analysis_in_India.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/Rubix64/Tourism-analysis-of-India/blob/main/tourism_analysis_in_India.ipynb

# **Indian Tourism Analysis**

Tourism is one the largest service industry in India. It is important for the country's economy and is growing rapidly. The World Travel and Tourism Council calculated that tourism generated â‚¹16.91 lakh crore (US$220 billion) or 9.2% of India's GDP in 2018 and supported 42.673 million jobs, 8.1% of its total employment. Tourism is estimated to have directly contributed 2.7 per cent to GDP and 6.7 per cent to the employment of the country in 2019-20. The main reason why India is famous for tourism is because all types of tourist destinations exist in one place.  Each state in India is famous for different tourist attractions. India is the right place for wild safaris, desert safaris, nature seeking places, honeymoon spot, adventurous activities, spiritual places, and historical places of India.    
     
So from the data I have obtained, I have analyzed how tourism has been faring in India during all these years.

This notebook focuses on Tourism analysis of India (primarily of foreign tourists) from the data obtained from [data.gov.in](https://data.gov.in/).

Modules used:
- Pandas and Numpy: For loading and manipulating data.
- Matplotlib and Seaborn: For visualization.

The dataset is stored in the `./dataset` folder

So.. Let's begin the analysis!!

## Importing the modules
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# %matplotlib inline

sns.set(style="darkgrid")

"""## **Statistics of International Tourists to India [1981 - 2020]**

The dataset used here is the statistics of the foreign tourists who visited India from 1981 to 2020. This dataset also includes the segregation of the International tourists (ITAs) into foreign tourist arrivals (FTAs) and Non-resident Indians (NRIs). The percentage changes between consecutive values is included in the dataset but it isn't considered here for visualization.

Before visualizing the dataset, we need to prepare the data for Visualization.

#### **Preparing the Dataset**
"""

# Fetching data from the csv file
df=pd.read_csv(".\dataset\India-Tourism-Statistics-1981-2020-fta_nri_ita.csv")
fta_nri_ita=df.copy()
fta_nri_ita.head()

# renaming and dropping columns
fta_nri_ita.rename(columns={'FTAs in India (in million)': 'FTA','NRIs arrivals in India (in million)':'NRI','ITAs in India  (in million)':'ITA'},inplace=True, errors='raise')
fta_nri_ita.drop(fta_nri_ita.iloc[:,2::2],axis=1,inplace=True) 
fta_nri_ita.head()

# Combining columns FTA,NRI,ITA into a single column 'value' and column 'variable' will distinguish these values 
df=pd.melt(fta_nri_ita,['Year']).rename(columns={'variable':'Tourists'})
df

"""#### **Visualizing the Dataset**"""

# plotting df in a line graph
plt.figure(figsize=(20,8)) # setting figure size

sns.set_context("talk") #https://seaborn.pydata.org/generated/seaborn.set_context.html
g=sns.lineplot(x='Year', y='value', hue='Tourists', data=df)
g.set(xlabel="Year",ylabel="Number of tourists (in millions)", title="International Tourists To India [1981-2020]")
plt.xticks(
    range(1981,2021),
    rotation=45,
#     horizontalalignment='right',
    fontweight='light'
)

plt.plot()

"""As we can see from the above **multiline graph**, there has been a steady increase in the number of tourists visiting India until 2020 as **COVID-19** restrictions led to a huge blow on the Tourism sector. The pandemic has not only jeopardised the growth prospects of the sector but also caused a significant economic slump, which the sector would take some time to recover from.    
     
Also, the growth in FTAs in India over the years, viz. 2003 to 2007, 2010, 2014 and 2017 saw a double-digit positive growth, while there was negative growth in the years 1991, 2001, 2002 (September 11 attacks i.e 9/11 attacks in U.S and many other factors) and 2009 (because of the 26/11 attack in Mumbai (Bombay), Maharashtra, India).    
     
Note: Ministry of tourism initiated compilation and dissemination of arrivals of Non-Resident Indians (NRIs) and the Foreign Tourist Arrivals (FTAs) since 2014.

## **Quarterly Distribution of Tourists [2001 - 2019]**

The dataset used here is the statistics of the quarterly distribution in percentages of foreign tourists who visited India from 2001 to 2019. We'll be converting then to actual numbers later on.

Before visualizing the dataset, we need to prepare the data for Visualization.

### **Total Arrivals [2001-2019]**

#### **Preparing the Dataset**
"""

# Fetching data from the csv file and renaming columns
quarterly=pd.read_csv(".\dataset\India-Tourism-Statistics-2001-2019-quaterly.csv").copy().rename(columns={
    '% Distribution by Quarter - 1st Quarter (Jan-Mar)':'1st Quarter',
    '% Distribution by Quarter - 2nd Quarter(Apr-June)':'2nd Quarter',
    '% Distribution by Quarter - 3rd Quarter (July-Sep)':'3rd Quarter',
    '% Distribution by Quarter - 4th Quarter (Oct-Dec)':'4th Quarter',
})
quarterly.head()

# Parsing the dataframe
tot_arrivals=quarterly[['Year','Arrivals']].copy()

# shifting the decimal place of the values in column 'Arrivals' 6 digits to the left
tot_arrivals["Arrivals"]=tot_arrivals['Arrivals']*(10**-6)
tot_arrivals=tot_arrivals.round(decimals=2) # rounding of to 2 places

tot_arrivals.head()

"""#### **Visualization of the Dataset**"""

# plotting the bar (column) graph
plt.figure(figsize=(14,7))

g=sns.barplot(x=tot_arrivals['Year'], y=tot_arrivals["Arrivals"], palette='viridis', label="Some Label")

plt.title("Total Arrivals [2001-2019]", fontsize=18)
plt.xlabel("Year", fontsize=16)
plt.ylabel("Arrivals in million", fontsize=16)
plt.xticks(fontsize=14)

# can also set using:
# g.set(xlabel="Year",ylabel="Arrivals in million", title="Total Arrivals [2001-2019]")

g.bar_label(g.containers[0], fontsize=14) #labelling the bars with values

plt.show()

"""As we can observe from the above **bar plot**, tourism has been improving in India even if there were a few exceptions during certain years.

### **Quarterly Distribution of FTAs during 2017, 2018 and 2019**

#### **Preparing the Dataset**
"""

#parsing the dataframe

quarterly2017=quarterly[quarterly['Year']==2017].copy()
quarterly2017=quarterly2017.drop(['Arrivals','Year'],axis=1) #axis=1 specifies columnwise

quarterly2018=quarterly[quarterly['Year']==2018].copy()
quarterly2018=quarterly2018.drop(['Arrivals','Year'],axis=1)

quarterly2019=quarterly[quarterly['Year']==2019].copy()
quarterly2019=quarterly2019.drop(['Arrivals','Year'],axis=1)

quarterly2017.head()

quarterly2018.head()

quarterly2019.head()

"""#### **Visualizing the Dataset**"""

# plotting subplots (pie charts)
fig, axes = plt.subplots(1,3, sharex=True, figsize=(23,8))
fig.suptitle('Quarterly Distribution of Tourists [2017, 2018, 2019]',fontsize=30,fontweight='bold')

quarter_labels=['1st Quarter\n(Jan-Mar)','2nd Quarter\n(Apr-Jun)','3rd Quarter\n(Jul-Sep)','4th Quarter\n(Oct-Dec)']
  
colors = ['yellowgreen', 'lightgreen', 'darkred', 'gold','darkgreen', 'red', 'lightsalmon']

# plotting data on chart
axes[0].pie(quarterly2017.loc[16,:].values.tolist(), labels=quarter_labels, colors=colors, 
            autopct='%1.1f%%',shadow=True, startangle=90)
axes[0].set_title("2017",fontsize=25,fontweight='bold')

axes[1].pie(quarterly2018.loc[17,:].values.tolist(), labels=quarter_labels, colors=colors, 
            autopct='%1.1f%%',shadow=True, startangle=90)
axes[1].set_title("2018",fontsize=25,fontweight='bold')

axes[2].pie(quarterly2019.loc[18,:].values.tolist(), labels=quarter_labels, colors=colors, 
            autopct='%1.1f%%',shadow=True, startangle=90)
axes[2].set_title("2019",fontsize=25,fontweight='bold')
# plt.legend()

# handles, labels = plt.gca().get_legend_handles_labels()
# fig.legend(handles, labels, loc='upper left')

# displaying chart
plt.show()

"""As per the **pie charts** above, we can observe that the number of FTAs In India has been highest during the winter season (4th Quarter (Oct-Dec) and 1st Quarter (Jan-Mar)) (best season to visit India because of favorable weather and temperature) and has been the lowest during the summer season (2nd Quarter (Apr-Jun)) (because of heat) during the years 2017, 2018 and 2019.

### **Average Percentage Distribution of FTAs Quarterly [2001 - 2019]**

#### **Preparing the Dataset**
"""

# Fetching each quarterly data
quarter1=quarterly[['Year','1st Quarter']].copy()
quarter2=quarterly[['Year','2nd Quarter']].copy()
quarter3=quarterly[['Year','3rd Quarter']].copy()
quarter4=quarterly[['Year','4th Quarter']].copy()
# quarter1.head()
# quarter2.head()
# quarter3.head()
# quarter4.head()

# converting %ages to actual values
quarter1['1st Quarter']=quarter1['1st Quarter']*quarterly['Arrivals']/100
quarter2['2nd Quarter']=quarter2['2nd Quarter']*quarterly['Arrivals']/100
quarter3['3rd Quarter']=quarter3['3rd Quarter']*quarterly['Arrivals']/100
quarter4['4th Quarter']=quarter4['4th Quarter']*quarterly['Arrivals']/100
# quarter1

# Finding average %ages for each quarter from 2001 to 2019
sum_arrivals=quarterly['Arrivals'].sum()

average_percentage_quarter=[
    quarter1['1st Quarter'].sum()/sum_arrivals * 100,
    quarter2['2nd Quarter'].sum()/sum_arrivals * 100,
    quarter3['3rd Quarter'].sum()/sum_arrivals * 100,
    quarter4['4th Quarter'].sum()/sum_arrivals * 100,
]

average_percentage_quarter

"""#### **Visualizing the Dataset**"""

# plotting data on pie chart
colors = ['yellowgreen', 'lightgreen', 'darkred', 'gold','orange', 'red', 'lightsalmon']

plt.figure(figsize=(10,8))
plt.pie(quarterly2017.loc[16,:].values.tolist(), labels=quarter_labels, colors=colors[1:], 
            autopct='%1.1f%%',shadow=True, startangle=90)
plt.title("Average % Distribution of Tourists Quarterly from 2001-2019",fontsize=25,fontweight='bold')

# displaying chart
plt.show()

"""As per the **pie chart**, we can observe that on an average, the number of FTAs during the winter season has been the highest while it was the least during the summer season from 2001 to 2019.

## **Statistics of ITAs to India based on purpose 2019**

The dataset used here is the statistics of the ITAs to India during 2019. This dataset includes the percentage distribution of international tourist visits to India based on specific reasons which are grouped by countries (also regions). These percentages will be later on converted to numbers.

Before visualizing the dataset, we need to prepare the data for Visualization.

### **Statistics of ITAs to India based on purpose 2019 [Regionwise]**

#### **Preparing the Dataset**
"""

# fetching data from csv file
country_and_reason=pd.read_csv(".\dataset\India-Tourism-Statistics-2019_region-and-reason.csv")
country_and_reason.head()

# Parsing dataframe
regionwise_reason = country_and_reason[country_and_reason['Country of Nationality']=='Total'].copy()

# converting %ages to actual values and shifting the decimal places by 5 to the left
regionwise_reason['Business and Professional(%)']=regionwise_reason['Business and Professional(%)']*regionwise_reason['Arrivals (in numbers)']/100 * 10**-5
regionwise_reason['Leisure Holiday and Recreation(%)']=regionwise_reason['Leisure Holiday and Recreation(%)']*regionwise_reason['Arrivals (in numbers)']/100 * 10**-5
regionwise_reason['Medical(%)']=regionwise_reason['Medical(%)']*regionwise_reason['Arrivals (in numbers)']/100 * 10**-5
regionwise_reason['Indian Diaspora(%)']=regionwise_reason['Indian Diaspora(%)']*regionwise_reason['Arrivals (in numbers)']/100 * 10**-5
regionwise_reason['Others(%)']=regionwise_reason['Others(%)']*regionwise_reason['Arrivals (in numbers)']/100 * 10**-5

# Dropping columns
regionwise_reason.drop(['Arrivals (in numbers)','Country of Nationality'],axis=1,inplace=True)

# Renaming columns
regionwise_reason.rename(columns={
    'Business and Professional(%)':'Business and Professional',
    'Leisure Holiday and Recreation(%)':'Leisure Holiday and Recreation',
    'Medical(%)':'Medical',
    'Indian Diaspora(%)':'Indian Diaspora',
    'Others(%)':'Others'
},inplace=True)

# Resetting index
regionwise_reason.set_index('Region',inplace=True)

regionwise_reason.head()

"""#### **Visualizing the Dataset**"""

# plotting area graph
g=regionwise_reason.plot(kind = 'area',
              stacked = False,
              alpha = 0.37, # transparency coefficient, default 0.5, can set between 0 - 1
              figsize =(28,10),
             )

g.set_xticks(range(len(regionwise_reason.index)));
g.set_xticklabels(regionwise_reason.index);

plt.title('Regionwise poll on various reasons for visiting India [2019]',fontsize=25,fontweight='bold')
plt.xlabel('Region',fontsize=20)
plt.ylabel('Arrivals (in lakhs)',fontsize=20)
plt.xticks()

# displaying graph
plt.show()

"""As we can observe from the above **area plot**, South Asia (mostly from Bangladesh) contributes the highest tourist visits to India. While the reason of visit to India from the above mentioned regions is mostly for Leisure Holiday and Recreation, it is the least for Medical purposes among the 4 specified reasons.   
     
**Medical tourism** in India is doing exceptionally well. India ranks among top 3 medical tourism destinations in Asia
owing to it's low cost of treatment, quality healthcare infrastructure, and availability of highly-skilled doctors. During the recovery period, patients can turn to a multitude of therapies like  Ayurveda, Naturopathy and Yoga. Another major factor that makes India a desirable medical tourism destination is the fact that it has English speaking doctors, reducing the language barrier for foreign tourists.

### **Tourists to India from Top 5 countries - 2019**

#### **Preparing the Dataset**
"""

# Parsing dataframe
countrywise=country_and_reason[country_and_reason['Country of Nationality'].isin(['Total','Grand Total','Not Classified Elsewhere','OTHERS'])==False].copy()
# Sorting w.r.t Arrivals in descending order
countrywise.sort_values(by=["Arrivals (in numbers)"],ascending=False, inplace = True)
# fetching 5 countries with top arrivals
countrywise=countrywise.iloc[0:5,:]
# dropping column 'Region'
countrywise.drop(["Region"],axis=1,inplace=True)

# Renaming columns
countrywise.rename(columns={
    'Business and Professional(%)':'Business and Professional',
    'Leisure Holiday and Recreation(%)':'Leisure Holiday and Recreation',
    'Medical(%)':'Medical',
    'Indian Diaspora(%)':'Indian Diaspora',
    'Others(%)':'Others'
},inplace=True)

# converting %ages to actual values and shifting the decimal places by 3 to the left
countrywise['Business and Professional']=countrywise['Business and Professional']*countrywise['Arrivals (in numbers)']/100 * 10**-3
countrywise['Leisure Holiday and Recreation']=countrywise['Leisure Holiday and Recreation']*countrywise['Arrivals (in numbers)']/100 * 10**-3
countrywise['Medical']=countrywise['Medical']*countrywise['Arrivals (in numbers)']/100* 10**-3
countrywise['Indian Diaspora']=countrywise['Indian Diaspora']*countrywise['Arrivals (in numbers)']/100* 10**-3
countrywise['Others']=countrywise['Others']*countrywise['Arrivals (in numbers)']/100* 10**-3

# dropping column
countrywise.drop(["Arrivals (in numbers)"],axis=1,inplace=True)

countrywise.head()

"""#### **Visualizing the Dataset**"""

# Combining columns w.r.t nationality into a single column 'value' and column 'variable' will distinguish these values 
df=pd.melt(countrywise,['Country of Nationality']).rename(columns={"variable":"Reason of Visit"})

# plotting bar (multicolumn) graph
plt.figure(figsize=(20,8))
# country v / s reason barplot
sns.barplot(x ='Country of Nationality',y='value', hue="Reason of Visit",data = df, palette='Paired')

plt.ylabel("Arrivals (in thousands)",fontsize=18)
plt.xlabel('Country of Nationality',fontsize=18)
plt.title("Tourists to India from Top 5 countries (2019)",fontsize=20,fontweight='bold')
 
# Show the plot
plt.show()

"""As we can observe from the above **multibar graph**, Bangladesh contributes the most to the Tourism sector of India. Most visitors from **Bangladesh** primarily visit India for Leisure. According to India's ministry of tourism's 'India Tourism Statistics at a Glance 2021' report, Bangladesh accounted for 23.6 per cent of overall foreign tourist visits to India. This implies that it has been and is currently the primary source of international tourists to India.

### **Average Distribution of Tourists to India based on the purpose of visit - 2019**

#### **Preparing the Dataset and Visualizing it**
"""

# fetching the grand total information
grand_total=country_and_reason[country_and_reason['Country of Nationality']=='Grand Total'].copy()

reason_list=['Business and Professional(%)','Leisure Holiday and Recreation(%)','Medical(%)','Indian Diaspora(%)','Others(%)']
colors = ['maroon', 'crimson', 'dodgerblue', 'aqua', 'lightgreen']

# plotting data on pie chart
plt.figure(figsize=(8,6))

pie=plt.pie(grand_total.loc[83,:].values.tolist()[3:], colors=colors, 
            autopct='%1.1f%%',shadow=True, startangle=90,textprops={'fontsize': 15},pctdistance = 1.15,)
# plt.legend()
plt.legend(pie[0],reason_list, bbox_to_anchor=(1.5,0.7), loc="upper right", fontsize=15, 
           bbox_transform=plt.gcf().transFigure)

plt.title("Average distribution of tourists based on purpose of visit - 2019",fontsize=22,fontweight='bold')

# displaying chart
plt.show()

"""Thus from the above **pie chart**, it can be inferred that most tourists visit India primarily for leisure.   
Each state in India is famous for different tourist attractions. Different places in India will entertain tourists by natural wonders, tranquil places, history and architecture, spirituality etc. All these aspire visitors to visit India for a memorable trip and is the perfect destination for leisure.

## **Contribution Statistics to the Share Market of Indian Tourism [2017 - 2019]**

The dataset used here is the statistics of the contribution to the share market of Indian tourism in percentages from 2017 to 2019. This dataset also includes the number of arrivals to India from these countries which won't be considered here for visualization.

Before visualizing the dataset, we need to prepare the data for Visualization.

### **Contribution to the Share Market of Indian Tourism regionwise [2017 - 2019]**

#### **Preparing the Dataset**
"""

# fetching data from csv file
country_and_share=pd.read_csv(".\dataset\India-Tourism-Statistics-region-2017-2019.csv")
country_and_share.head()

# Parsing, and setting the index of the dataframe
regionwise_share=country_and_share[country_and_share['Country of Nationality']=='Total'].copy()
regionwise_share=regionwise_share[['Region','Percentage Share - 2017','Percentage Share - 2018','Percentage Share - 2019']]
regionwise_share.set_index('Region',inplace=True)
regionwise_share.head()

"""#### **Visualizing the Dataset**"""

# plotting the line graph
g=regionwise_share.plot(kind = 'line',
              stacked = False,
              alpha = 0.7, # transparency coefficient, default 0.5, can set between 0 - 1
              figsize =(30,12),
             )

g.set_xticks(range(len(regionwise_share.index)));
g.set_xticklabels(regionwise_share.index);

i=0
# for row in regionwise_share.index:
#     g.text(i, regionwise_share._get_value(row,'Percentage Share - 2017'), regionwise_share._get_value(row,'Percentage Share - 2017'), size=15, verticalalignment="bottom", horizontalalignment="left")
#     g.text(i, regionwise_share._get_value(row,'Percentage Share - 2018'), regionwise_share._get_value(row,'Percentage Share - 2018'), size=15, verticalalignment="top", horizontalalignment="right")
#     g.text(i, regionwise_share._get_value(row,'Percentage Share - 2019'), regionwise_share._get_value(row,'Percentage Share - 2019'), size=15, verticalalignment="center", horizontalalignment="center")
#     i=i+1

plt.title('Regionwise % share on Indian Tourism Market [2017, 2018, 2019]',fontsize=25,fontweight='bold')
plt.xlabel('Region',fontsize=20)
plt.ylabel('% share',fontsize=20)
plt.xticks()

plt.show()

"""As per the above **multiline graph**, it is evident that South Asia (mostly from Bangladesh), Western Europe (mostly from U.K) and North America (USA and Canada) contribute the highest towards the Indian Tourism share market.
    
Since 2014, adhering to the definition of International Tourist Arrivals, India has started the inclusion of figures of arrivals of Non resident Indians. This has resulted in improvement of numbers pertaining to contibutions to the Indian Tourism Share Market.

### **Contribution to the Indian Tourism Share Market countrywise [2017 - 2019]**

#### **Preparing the Dataset**
"""

# obtaining 6 countries with highest shares during 2017

# Parsing dataframe
highest_countrywise_2017=country_and_share[country_and_share['Country of Nationality'].isin(
    ['Total','Grand Total','Not Classified elsewhere','Others'])==False].copy()
highest_countrywise_2017=highest_countrywise_2017[['Country of Nationality','Percentage Share - 2017']]
# sorting w.r.t % share-2017 in descending order
highest_countrywise_2017.sort_values(by=['Percentage Share - 2017'],ascending=False,inplace=True)
# fetching top 6 countries with highest share contributions
highest_countrywise_2017=highest_countrywise_2017.iloc[0:6,:]

# %age share values sum of 2017
perc_sum=highest_countrywise_2017['Percentage Share - 2017'].sum()

# Accumulating the total %age share by the rest of the countries
highest_countrywise_2017=pd.concat(
    [highest_countrywise_2017,pd.DataFrame.from_records([{'Country of Nationality':'Others','Percentage Share - 2017':(100-perc_sum)}])],
    ignore_index=True)


# obtaining 6 countries with highest shares during 2018

# Parsing dataframe
highest_countrywise_2018=country_and_share[country_and_share['Country of Nationality'].isin(
    ['Total','Grand Total','Not Classified elsewhere','Others'])==False].copy()
highest_countrywise_2018=highest_countrywise_2018[['Country of Nationality','Percentage Share - 2018']]
# sorting w.r.t % share-2018 in descending order
highest_countrywise_2018.sort_values(by=['Percentage Share - 2018'],ascending=False,inplace=True)
# fetching top 6 countries with highest share contributions
highest_countrywise_2018=highest_countrywise_2018.iloc[0:6,:]

# %age share values sum of 2018
perc_sum=highest_countrywise_2018['Percentage Share - 2018'].sum()

# Accumulating the total %age share by the rest of the countries
highest_countrywise_2018=pd.concat(
    [highest_countrywise_2018,pd.DataFrame.from_records([{'Country of Nationality':'Others','Percentage Share - 2018':(100-perc_sum)}])],
    ignore_index=True)


# obtaining 6 countries with highest shares during 2019

# Parsing dataframe
highest_countrywise_2019=country_and_share[country_and_share['Country of Nationality'].isin(
    ['Total','Grand Total','Not Classified elsewhere','Others'])==False].copy()
highest_countrywise_2019=highest_countrywise_2019[['Country of Nationality','Percentage Share - 2019']]
# sorting w.r.t % share-2019 in descending order
highest_countrywise_2019.sort_values(by=['Percentage Share - 2019'],ascending=False,inplace=True)
# fetching top 6 countries with highest share contributions
highest_countrywise_2019=highest_countrywise_2019.iloc[0:6,:]

# %age share values sum of 2019
perc_sum=highest_countrywise_2019['Percentage Share - 2019'].sum()

# Accumulating the total %age share by the rest of the countries
highest_countrywise_2019=pd.concat(
    [highest_countrywise_2019,pd.DataFrame.from_records([{'Country of Nationality':'Others','Percentage Share - 2019':(100-perc_sum)}])],
    ignore_index=True)

"""#### **Visualizing the Dataset**"""

# plotting subplots (pie charts)
fig, axes = plt.subplots(1,3, sharex=True, figsize=(20,8))
fig.suptitle('Percentage shares of countries on Indian Tourism [2017, 2018, 2019]',fontsize=25,fontweight='bold')

# plotting data on chart

colors = ['maroon', 'crimson', 'dodgerblue', 'aqua', 'lightgreen','yellowgreen', 'gold']

#2017

pie=axes[0].pie(highest_countrywise_2017['Percentage Share - 2017'], colors=colors, shadow=True, startangle=90)
percents=highest_countrywise_2017['Percentage Share - 2017']*100/highest_countrywise_2017['Percentage Share - 2017'].sum()
axes[0].legend(
    pie[0],[f'{p:.1f}% {l}'  for p ,l in zip(percents, highest_countrywise_2017['Country of Nationality'])],
    bbox_to_anchor=(0.2,0.7),
    loc="upper right", fontsize=15, 
    bbox_transform=plt.gcf().transFigure)
axes[0].set_title("2017",fontsize=20,fontweight='bold')

#2018

pie=axes[1].pie(highest_countrywise_2018['Percentage Share - 2018'], colors=colors, shadow=True, startangle=90)
percents=highest_countrywise_2018['Percentage Share - 2018']*100/highest_countrywise_2018['Percentage Share - 2018'].sum()
axes[1].legend(
    pie[0],[f'{p:.1f}% {l}'  for p ,l in zip(percents, highest_countrywise_2018['Country of Nationality'])],
    bbox_to_anchor=(0.48,0.7),
    loc="upper right", fontsize=15, 
    bbox_transform=plt.gcf().transFigure)
axes[1].set_title("2018",fontsize=20,fontweight='bold')

#2019

pie=axes[2].pie(highest_countrywise_2019['Percentage Share - 2019'],  colors=colors, shadow=True, startangle=90)
percents=highest_countrywise_2019['Percentage Share - 2019']*100/highest_countrywise_2019['Percentage Share - 2019'].sum()
axes[2].legend(
    pie[0],[f'{p:.1f}% {l}'  for p ,l in zip(percents, highest_countrywise_2019['Country of Nationality'])],
    bbox_to_anchor=(0.76,0.7),
    loc="upper right", fontsize=15, 
    bbox_transform=plt.gcf().transFigure)
axes[2].set_title("2019",fontsize=20,fontweight='bold')
# plt.legend()

# handles, labels = plt.gca().get_legend_handles_labels()
# fig.legend(handles, labels, loc='upper left')

# displaying chart
plt.show()

"""From the above **pie charts**, we can infer that during the years 2017, 2018 and 2019, the contributions to the Indian Share Market by the Major countries has been constant with Bangladesh, U.S.A and U.K. on the lead.

## **Tourist segregation based on age [2001 - 2019]**

The dataset used here is the statistics of the distribution of FTAs to India by age from 2001 to 2019 in percentages. These percentages will be later on converted to numbers.

Before visualizing the dataset, we need to prepare the data for Visualization.

### **FTAs segregated based on age [2001 - 2019]**

#### **Preparing the Dataset**
"""

# fetching data from the csv file
agegroup=pd.read_csv(".\dataset\India-Tourism-Statistics-2001-2019-agegroup.csv")
agegroup.head()

# Renaming the columns
agegroup_elaborate=agegroup.copy().rename(columns={
    '% distribution by Age-Group (in Year) - 0-14':'0-14',
    '% distribution by Age-Group (in Year) - 15-24':'15-24',
    '% distribution by Age-Group (in Year) - 25-34':'25-34',
    '% distribution by Age-Group (in Year) - 35-44':'35-44',
    '% distribution by Age-Group (in Year) - 45-54':'45-54',
    '% distribution by Age-Group (in Year) - 55-64':'55-64',
    '% distribution by Age-Group (in Year) - 65 and above':'65 and above',
    '% distribution by Age-Group (in Year) - Not Reported':'Not Reported',
})

# converting %ages to actual values and shifting the decimal places by 3 to the left
agegroup_elaborate['0-14']=agegroup_elaborate['0-14']*agegroup_elaborate['FTAs']/100 * 10**-3
agegroup_elaborate['15-24']=agegroup_elaborate['15-24']*agegroup_elaborate['FTAs']/100 * 10**-3
agegroup_elaborate['25-34']=agegroup_elaborate['25-34']*agegroup_elaborate['FTAs']/100 * 10**-3
agegroup_elaborate['35-44']=agegroup_elaborate['35-44']*agegroup_elaborate['FTAs']/100 * 10**-3
agegroup_elaborate['45-54']=agegroup_elaborate['45-54']*agegroup_elaborate['FTAs']/100 * 10**-3
agegroup_elaborate['55-64']=agegroup_elaborate['55-64']*agegroup_elaborate['FTAs']/100 * 10**-3
agegroup_elaborate['65 and above']=agegroup_elaborate['65 and above']*agegroup_elaborate['FTAs']/100 * 10**-3
agegroup_elaborate['Not Reported']=agegroup_elaborate['Not Reported']*agegroup_elaborate['FTAs']/100 * 10**-3

agegroup_elaborate.head()

"""#### **Visualizing the Dataset**"""

# dropping columns
agegroup_elaborate.drop(['FTAs','Not Reported'],axis=1 ,inplace=True)
# Combining columns w.r.t 'Year' into a single column 'value' and column 'variable' will distinguish these values 
df=pd.melt(agegroup_elaborate,['Year']).rename(columns={"variable":"Age Group"})

# plotting the multiline graph
plt.figure(figsize=(20,8))

sns.set_context("talk")

g=sns.lineplot(x='Year', y='value', hue='Age Group', data=df)
g.set(xlabel="Year",ylabel="Number of tourists (in thousands)", title="Tourists segregation based on age [2001-2019]")
plt.xticks(
    range(2001,2020),
    rotation=45,
#     horizontalalignment='right',
    fontweight='light'
)

# display the chart
plt.plot()

"""From the above **multiline plot**, we can infer that most of the tourists who visited India from 2001 to 2019 belonged to the age group of late 20s to early 50s. The proportion of FTAs in different age groups has not changed much in the last few years. The highest numbers of FTAs in India were from 35-44 years age group (21.0%) followed by the age groups of 45-54 years and 25-34 years. The lowest number of FTAs occurred in the age-group of 15-24 and 65 & above (8.7%).

### **Average %age distribution of Tourists based on age [2001 - 2019]**

#### **Preparing the Dataset**
"""

# finding average %ages for each agegroup from their actual values
tot_fta=agegroup['FTAs'].sum()

# 10**5 (100 * 10**3) since distribution among agegroups was converted to thousands previously
avg_agegroup_pctg=[
    agegroup_elaborate['0-14'].sum()*10**5/tot_fta,
    agegroup_elaborate['15-24'].sum()*10**5/tot_fta,
    agegroup_elaborate['25-34'].sum()*10**5/tot_fta,
    agegroup_elaborate['35-44'].sum()*10**5/tot_fta,
    agegroup_elaborate['45-54'].sum()*10**5/tot_fta,
    agegroup_elaborate['55-64'].sum()*10**5/tot_fta,
    agegroup_elaborate['65 and above'].sum()*10**5/tot_fta
]

print(avg_agegroup_pctg)

"""#### **Visualizing the Dataset**"""

colors = ['maroon', 'crimson', 'dodgerblue', 'aqua', 'lightgreen','gold','yellowgreen']
agegroup_list=['0-14','15-24','25-34','35-44','45-54','55-64','65 and above']

# plotting data on chart
plt.figure(figsize=(8,6))

pie=plt.pie(avg_agegroup_pctg, colors=colors, 
            autopct='%1.1f%%',shadow=True, startangle=0,textprops={'fontsize': 15},pctdistance = 1.15,)
# plt.legend()
plt.legend(pie[0],agegroup_list, bbox_to_anchor=(1.5,0.7), loc="upper right", fontsize=15, 
           bbox_transform=plt.gcf().transFigure)

plt.title("Average % of tourists based on age [2001-2019]",fontsize=20,fontweight='bold')

# displaying chart
plt.show()

"""As per the above **pie chart**, it can be deduced that the highest percentage of tourists visiting India are youths and the middleagers. This can be due to the fact that the youngsters aren't that well of when it comes to capital and the senior citizens would prefer to travel to places that are relaxing and comfortable or India doesn't end up attracting tourists from these age groups.     
    
As much as the elderly might avoid and refrain; travelling is the perfect resort for them to rejuvenate themselves and finally enjoy life the way they want to. Just like kids or the young, even they need a vacation for a variety of reasons- the primary one being that it boosts their physical, mental, and emotional health. But, Most people, feel that the biggest deterrent to tourism is lack of infrastructure, Lack of good budget hotels , proper roads as well as hygiene and sanitation are problems that put off most would-be travellers to India.    
    
The youngsters on the other hand could contribute largely to Indian tourism especially through education. Although the main purpose of international student mobility is to study, it can also be considered a type of tourist activity. India is still not seen by international applicants as a destination for education because of it's education system which needs a lot of improvement. If Indian education does improve and gets recognized by the world, then there could be a rise in the international students to India which could indirectly improve the contribution by the youngsters to Indian Tourism.

## **Indian Tourism Statewise Statistics [2019 - 2020]**

The dataset used here is the statistics of the Domestic and foreign tourists to India during 2019 and 2020 per state. This dataset also includes the growth rate which won't be considered for visualization.

Before visualizing the dataset, we need to prepare the data for Visualization.

### **Foreign tourists per State/UTs [2019 - 2020]**

#### **Preparing the Dataset**
"""

# fetching data from the csv file
statewise_data=pd.read_csv(".\dataset\India-Tourism-Statistics-statewise_2019-2020_domestic_foreign.csv")
statewise_data.head()

# Parsing dataframe
foreign_statewise=statewise_data[['States/UTs','Foreign - 2019','Foreign - 2020']].copy()
# sorting by Foreign-2019 in descending order
foreign_statewise.sort_values(by=['Foreign - 2019'], ascending=False, inplace=True)
foreign_statewise=foreign_statewise[foreign_statewise['States/UTs'].isin(['Grand Total'])==False]

# shifting the decimal places by 5 to the left
foreign_statewise['Foreign - 2019']=foreign_statewise['Foreign - 2019'] * 10**-5
foreign_statewise['Foreign - 2020']=foreign_statewise['Foreign - 2020'] * 10**-5

foreign_statewise.head()

"""#### **Visualizing the Dataset**"""

# Combining columns w.r.t 'States/UTs' into a single column 'value' and column 'variable' will distinguish these values 
df=pd.melt(foreign_statewise,['States/UTs']).rename(columns={"variable":"Year"})

# plotting data on horizontal bar graph
plt.figure(figsize=(16,50))
ax = sns.barplot(x="value", y="States/UTs", data=df, hue='Year', palette='GnBu_d')

for p in ax.patches:
    width = p.get_width()    # get bar length
    ax.text(width + 0.5,       # set the text at 1 unit right of the bar
            p.get_y() + p.get_height() / 2, # get Y coordinate + X coordinate / 2
            '{:1.2f}'.format(width), # set variable to display, 2 decimals
            ha = 'left',   # horizontal alignment
            va = 'center',  # vertical alignment
            fontsize=14)
        
plt.title("Foreign tourists per State/UTs [2019, 2020]", fontsize=20, fontweight='bold')
plt.xlabel("Arrivals (in lakhs)", fontsize=18)
plt.ylabel("States/UTs", fontsize=18)
plt.xticks(fontsize=15)
plt.yticks(fontsize=15)
plt.legend(bbox_to_anchor=(0.99,0.95), prop={'size': 16})

# display the chart
plt.show()

"""As per the above **horizontal barplot**, it can be observed that during the year 2019, Tamil Nadu, Maharashtra, Uttar Pradesh, Delhi and others had the highest number of foreign tourists to their state. It can also be inferred that significant revenue were derived from Tourism in these states. Thus during 2020, due to Covid-19 restrictions, there was an enormous decrease in the Tourists which led to a huge blow to the Tourism sector in these states.    
     
Tamil Nadu has the largest tourism industry in India with a percentage share of 21.31% and 21.86% of domestic and foreign tourist visits in the country. Thus the steep decline in tourist traffic in 2020 on the advent of pandamic severely affected the Tourism sector of the state.

### **Domestic tourists per State/UTs [2019 - 2020]**

#### **Preparing the Dataset**
"""

# Parsing dataframe
domestic_statewise=statewise_data[['States/UTs','Domestic -2019','Domestic -2020']].copy()
# sorting by Domestic-2019 in descending order
domestic_statewise.sort_values(by=['Domestic -2019'], ascending=False, inplace=True)
domestic_statewise=domestic_statewise[domestic_statewise['States/UTs'].isin(['Grand Total'])==False]

# shifting the decimal places by 5 to the left
domestic_statewise['Domestic -2019']=domestic_statewise['Domestic -2019'] * 10**-5
domestic_statewise['Domestic -2020']=domestic_statewise['Domestic -2020'] * 10**-5

domestic_statewise.head()

"""#### **Visualization of the Dataset**"""

# Combining columns w.r.t 'States/UTs' into a single column 'value' and column 'variable' will distinguish these values 
df=pd.melt(domestic_statewise,['States/UTs']).rename(columns={"variable":"Year"})

# plotting data on horizontal bar graph
plt.figure(figsize=(16,50))
ax = sns.barplot(x="value", y="States/UTs", data=df, hue='Year', palette='flare')

for p in ax.patches:
    width = p.get_width()    # get bar length
    ax.text(width + 1,       # set the text at 1 unit right of the bar
            p.get_y() + p.get_height() / 2, # get Y coordinate + X coordinate / 2
            '{:1.2f}'.format(width), # set variable to display, 2 decimals
            ha = 'left',   # horizontal alignment
            va = 'center',  # vertical alignment
            fontsize=14)
            
plt.title("Domestic tourists per State/UTs [2019, 2020]", fontsize=20, fontweight='bold')
plt.xlabel("Arrivals (in lakhs)", fontsize=18)
plt.ylabel("States/UTs", fontsize=18)
plt.xticks(fontsize=15)
plt.yticks(fontsize=15)
plt.legend(bbox_to_anchor=(0.99,0.95), prop={'size': 16})

# display the chart
plt.show()

"""As per the above **horizontal bargraph**, it can be observed that during the year 2019, Uttar Pradesh, Tamil Nadu, Andhra Pradesh, Karnataka and others had the highest number of domestic tourists to their state. It can also be inferred that significant revenue were derived from Tourism in these states. Thus during 2020, due to Covid-19 restrictions, there was an enormous decrease in the Tourists which led to a huge blow to the Tourism sector in these states.    
    
Since domestic tourism is several times larger than international tourism in India, any effect on domestic tourism could be a big impact on the Tourism sector overall. Thus in 2020, Covid-19 restrictions limited tourism activity which translates into a huge reduction in tourism expenditure incurred by all types of touristsâ€” inbound, domestic, and outbound. Thus there was a steep decline in the overall revenue obtaned from Tourism, particularly domestic tourism.    
    
In 2019, the state of Uttar Pradesh attracted the most domestic tourists sweeping 23.1% of tourist share of India, counting about 53,6 Cr domestic tourists, while international figures too were no less encouraging at about 47.5 Lacs. But in 2020, tourist traffic in Uttar Pradesh has witnessed a severe blow following the outbreak of the corona virus pandemic. Thus the decline in tourist traffic not only hindered tourism but also the revenue and jobs that come with it in the state of Uttar Pradesh.

### **Total tourists per State/UTs [2019 - 2020]**

#### **Preparing the Dataset**
"""

# parsing the dataframe
total_statewise=statewise_data[['States/UTs','Domestic -2019','Foreign - 2019','Domestic -2020','Foreign - 2020']].copy()
# calculating total tourists to States/UTs
total_statewise['Total Tourists']= total_statewise['Domestic -2019']+ total_statewise['Foreign - 2019']+ total_statewise['Domestic -2020']+ total_statewise['Foreign - 2020']
# dropping columns
total_statewise.drop(['Domestic -2019','Foreign - 2019','Domestic -2020','Foreign - 2020'], axis=1, inplace=True)
# sorting by Total Tourists in descending order
total_statewise.sort_values(by=["Total Tourists"], ascending=False, inplace=True)
total_statewise=total_statewise[total_statewise['States/UTs'].isin(['Grand Total'])==False]
# shifting the decimal places by 6 to the left
total_statewise["Total Tourists"]=total_statewise['Total Tourists']* 10**-6

# fetching the 10 most visited States/UTs
total_statewise=total_statewise.iloc[0:10]

total_statewise.head()

"""#### **Visualizing the Dataset**"""

# plotting the bar graph
plt.figure(figsize=(20,8))

g=sns.barplot(x=total_statewise['States/UTs'], y=total_statewise['Total Tourists'], palette='YlOrBr_r')

plt.title("Total Tourists by States/UTs [2019-2020]", fontsize=18)
plt.xlabel("States/UTs", fontsize=16)
plt.ylabel("Total Tourists (in million)", fontsize=16)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)

g.bar_label(g.containers[0], fontsize=15) # labelling the bars

# displaying the chart
plt.show()

"""Thus from the above **bar plot**, it can be infered that overall Tamil Nadu stood first in the Tourism sector followed by Uttar Pradesh during the years 2019 and 2020 and it is the same even now.

## **Popular monuments during 2019,2020,2021**

The dataset used here is the statistics of the number of Domestic and foreign tourists to popular monuments in India during 2019,2020 and 2021 along with their regions. This dataset also includes the growth rate which won't be considered for visualization.

Before visualizing the dataset, we need to prepare the data for Visualization.

### **Top 10 Tourism Destinations visited by foreigners 2019**

#### **Preparing the Dataset**
"""

# fetching data from the csv file
monuments=pd.read_csv('.\dataset\India-Tourism-Statistics-2021-monuments.csv')
monuments.head()

# parsing the dataframe
circlewise_tourist=monuments[monuments['Name of the Monument']=='Total'].copy()
circlewise_tourist=circlewise_tourist[['Circle','Foreign-2019-20','Domestic-2019-20']]
# sorting by Foreign-2019-20 in descending order
circlewise_tourist.sort_values(by=['Foreign-2019-20'],ascending=False,inplace= True)

# shifting the decimal places by 3 to the left
circlewise_tourist['Foreign-2019-20']= circlewise_tourist['Foreign-2019-20']* 10**-3
circlewise_tourist['Domestic-2019-20']= circlewise_tourist['Domestic-2019-20']* 10**-3

circlewise_tourist.head()

"""#### **Visualizing the Dataset**"""

# plotting the bar graph
plt.figure(figsize=(20,8))

g=sns.barplot(x=circlewise_tourist['Circle'].iloc[0:10], y=circlewise_tourist['Foreign-2019-20'].iloc[0:10], palette='mako')

plt.title("Top 10 tourist destinations visited by foreigners [2019]", fontsize=18)
plt.xlabel("Circle", fontsize=16)
plt.ylabel("Tourists (in thousands)", fontsize=16)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)

g.bar_label(g.containers[0], fontsize=15) # labelling the bars

# displaying the chart
plt.show()

"""As per the above **bar plot**, it can be observed that **Agra** was and is the most popular Tourist spot followed by **Delhi**. This can be due to the fact that Taj Mahal which is India's most recognizable iconic monument, is situated in Agra. And it is also to be noted that since Delhi is just 200km away from Agra and is also quite famous for it's unique monuments, it surely does piques the interests of many tourists visiting India.

### **Top 10 Tourism Destinations visited by domestic travellers 2019**

#### **Preparing and Visualizing the Dataset**
"""

# sorting by Domestic-2019-20 in descending order
circlewise_tourist.sort_values(by=['Domestic-2019-20'],ascending=False,inplace= True)

# plotting data on bar graph
plt.figure(figsize=(20,8))

g=sns.barplot(x=circlewise_tourist['Circle'].iloc[0:10], y=circlewise_tourist['Domestic-2019-20'].iloc[0:10], palette='mako')

plt.title("Top 10 tourist destinations visited by domestic tourists [2019]", fontsize=18)
plt.xlabel("Circle", fontsize=16)
plt.ylabel("Tourists (in thousands)", fontsize=16)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)

g.bar_label(g.containers[0], fontsize=15) #labelling bars

# displaying chart
plt.show()

"""A clear pattern similar to the previous graph can be observed in the above **bar plot**. Agra and Delhi are still the most popular tourist destinations even among domestic travellers, while the rest of the popular tourist zones which are popular for their heritage or their infrastructure are pretty much newer destinations which are not so popular among the foreign tourists.

### **Top 10 Monuments visited by foreigners 2019**

#### **Preparing the Dataset**
"""

# Parsing the dataframe
monument_tourist=monuments[monuments['Name of the Monument'].isin(['Total','Grand Total'])==False].copy()
# Modifying the contents
monument_tourist['Name of the Monument'] = monument_tourist['Name of the Monument']+" ("+monument_tourist['Circle']+")"

# parsing the dataframe
monument_tourist=monument_tourist[['Name of the Monument','Foreign-2019-20','Domestic-2019-20']]
# sorting by Foreign-2019-20 in descending order
monument_tourist.sort_values(by=['Foreign-2019-20'],ascending=False,inplace= True)

# shifting the decimal places by 3 to the left
monument_tourist['Foreign-2019-20']= monument_tourist['Foreign-2019-20']* 10**-3
monument_tourist['Domestic-2019-20']= monument_tourist['Domestic-2019-20']* 10**-3

monument_tourist.head()

"""#### **Visualizing the Dataset**"""

# displaying data on bar chart
plt.figure(figsize=(20,8))

# picking top 10 visited monuments
x=monument_tourist['Name of the Monument'].iloc[0:10]

g=sns.barplot(x=[ str(i) for i in range(1,11)], y=monument_tourist['Foreign-2019-20'].iloc[0:10], palette='rocket')

plt.title("Top 10 monuments visited by foreigners [2019]", fontsize=18)
plt.xlabel("Monuments", fontsize=16)
plt.ylabel("Tourists (in thousands)", fontsize=16)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)

# Textbox contents
text="X-axis:\n\n"
for i,value in zip(range(1,11),x):
    text= text + str(i) + " -  " + value + "\n"
    
plt.text(6.2, 300, text, fontsize = 15, 
         bbox = dict(facecolor = 'white', alpha = 0.5))

g.bar_label(g.containers[0], fontsize=15) #labelling bars

# displaying chart
plt.show()

"""As seen in the popular tourism destinations plot, it is evident from the above **bar plot** that most of the popular monuments visited by the FTAs are situated in Agra and Delhi, famous among them being one of the seven wonders of the world '**Taj Mahal**'.

### **Top 10 Monuments visited by domestic travellers 2019**

#### **Preparing and Visualizing the Dataset**
"""

# sorting by Domestic-2019-20 in descending order
monument_tourist.sort_values(by=['Domestic-2019-20'],ascending=False,inplace= True)

# displaying data on bar chart
plt.figure(figsize=(20,8))

# picking top 10 visited monuments
x=monument_tourist['Name of the Monument'].iloc[0:10]

g=sns.barplot(x=[ str(i) for i in range(1,11)], y=monument_tourist['Domestic-2019-20'].iloc[0:10], palette='rocket')

plt.title("Top 10 monuments visited by domestic tourists [2019]", fontsize=18)
plt.xlabel("Monuments", fontsize=16)
plt.ylabel("Tourists (in thousands)", fontsize=16)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)

# Textbox contents
text="X-axis:\n\n"
for i,value in zip(range(1,11),x):
    text= text + str(i) + " -  " + value + "\n"
    
plt.text(6.2, 2000, text, fontsize = 15, 
         bbox = dict(facecolor = 'white', alpha = 0.5))

g.bar_label(g.containers[0], fontsize=15) #labelling bars

# displaying chart
plt.show()

"""Just like the previous graph, it can be observed in the above **bar plot** as well that the monuments located in Agra and Delhi and popular enough, while it can also be observed that certain monuments which are not so popular have surely piqued the interests of the domestic travellers.       
           
It can be observed form these plots that all the popular places that are mentioned here mostly belong to North India. But it doesn't mean the other parts of India aren't faring well! As we can observe from the popular tourism state plots, it can be concluded that **Tamil Nadu** which is pretty popular for it's impressive temples and which receives the highest tourists throughout India is a state from the South!, which is also followed by South Indian states such as Andhra Pradesh and Karnataka.     
       
But **North-East** India lags in tourism as a result of insufficient funds, lack of infrastructure, transportation, lack of alternative means of transport, marketing, boundary issues, terror effect and permit period. If the government were to take the initiative of developing these states, then there would be justice done to the tourism sector of these states. After all, North East India is home to some of the most stunning, diverse and unspoilt scenery in India. From the snow capped peaks of the soaring Himalayan mountains, to the grassy plains of Assam and the steamy forests and majestic waterfalls of Meghalaya â€“ North East India showcases unspoilt nature at its finest!

## **Position of Indian Tourism in the world [2001 - 2021]**

The dataset used here is the comparison between world tourism and Indian tourism along with it's rank in the world from 2001 to 2021. This dataset also includes the percentage share which won't be considered here for visualization.

Before visualizing the dataset, we need to prepare the data for Visualization.

#### **Preparing the Dataset**
"""

# fetching data from the csv file
worldvsindia= pd.read_csv('.\dataset\India-Tourism-Statistics-2001-2019-worldvsindia.csv')
worldvsindia.head()

# Parsing the dataframe
worldvsindia_rank=worldvsindia[['Year','World - Number (in million)','India - Number (in million)','Rank of India']].copy()
worldvsindia_rank.fillna('NA',inplace=True)
worldvsindia_rank

"""#### **Visualizing the Dataset**"""

# df=pd.melt(worldvsindia_rank,['Year','Rank of India']).rename(columns={"variable":"World vs India"})

# displaying data on line chart
plt.figure(figsize=(20,8))

# sns.set_context("talk")

g=sns.lineplot(x='Year', y='India - Number (in million)', data=worldvsindia_rank, marker= 'v', markersize=14)
g.set(xlabel="Year",ylabel="Number of tourists (in million)", title="Indian Tourism rank in the world [2001-2019]")
    
plt.xticks(
    range(2001,2022),
    fontweight='light'
)

# label markers with ranks
for x,index in zip(g.get_xticks(),worldvsindia_rank.index):
    g.text(x,worldvsindia_rank._get_value(index,'India - Number (in million)')+0.5, worldvsindia_rank._get_value(index,'Rank of India'),size=15)

# display the chart
plt.plot()

"""From the above **line plot**, we can observe that Indian Tourism was improving until 2020 as **COVID-19** restrictions led to a steep decline in tourism. As NRIs were included in the tourism statistics of India ever since 2014, there was a steep increase in the number of tourists to India as well as it's position w.r.t Tourism in the world.   
    
Indian tourism developed a lot since the year of **2010** as the investment for the domestic tourism industry and the foreign tourism industry was increased to a great extent. Many other factors like transportation, hotel management system and other necessary tourism components got major upgrades.

Hopefully, now that the it's the post pandemic period, India will work towards improving tourism and bring it back to it's former glory so it can continue to improve from here.
"""